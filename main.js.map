{"version":3,"file":"main.js","mappings":"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","sources":["./src/app/app.component.ts","./src/app/app.module.ts","./src/app/app.routing.ts","./src/app/current-conditions/current-conditions.component.ts","./src/app/forecasts-list/forecasts-list.component.ts","./src/app/highlight.pipe.ts","./src/app/input-autocomplete/input-autocomplete.component.ts","./src/app/location.service.ts","./src/app/main-page/main-page.component.ts","./src/app/state-button/state-button.component.ts","./src/app/weather-http.service.ts","./src/app/weather.service.ts","./src/app/zipcode-entry/zipcode-entry.component.ts","./src/environments/environment.ts","./src/main.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport {SwPush, SwUpdate} from '@angular/service-worker';\nimport {interval} from 'rxjs';\nimport {HttpClient} from '@angular/common/http';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n\n    constructor() {\n\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { HttpClientModule } from \"@angular/common/http\";\nimport { RouterModule } from \"@angular/router\";\nimport { ServiceWorkerModule } from '@angular/service-worker';\nimport { environment } from '../environments/environment';\nimport { AppComponent } from './app.component';\nimport { routing } from \"./app.routing\";\nimport { CurrentConditionsComponent } from './current-conditions/current-conditions.component';\nimport { ForecastsListComponent } from './forecasts-list/forecasts-list.component';\nimport { HighlightPipe } from './highlight.pipe';\nimport { InputAutocompleteComponent } from './input-autocomplete/input-autocomplete.component';\nimport { MainPageComponent } from './main-page/main-page.component';\nimport { StateButtonComponent } from './state-button/state-button.component';\nimport { ZipcodeEntryComponent } from './zipcode-entry/zipcode-entry.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ZipcodeEntryComponent,\n    ForecastsListComponent,\n    CurrentConditionsComponent,\n    MainPageComponent,\n    StateButtonComponent,\n    InputAutocompleteComponent,\n    HighlightPipe\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    HttpClientModule,\n    RouterModule,\n    routing,\n    ServiceWorkerModule.register('/ngsw-worker.js', { enabled: environment.production }),\n    ReactiveFormsModule\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { ModuleWithProviders }  from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport {ForecastsListComponent} from \"./forecasts-list/forecasts-list.component\";\nimport {MainPageComponent} from \"./main-page/main-page.component\";\n\nconst appRoutes: Routes = [\n  {\n    path: '', component: MainPageComponent\n  },\n  {\n    path: 'forecast/:countrycode/:zipcode', component: ForecastsListComponent\n  }\n];\nexport const routing: ModuleWithProviders<any> = RouterModule.forRoot(appRoutes, { relativeLinkResolution: 'legacy' });\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from \"@angular/router\";\nimport { CurrentCondition } from 'app/current-condition.model';\nimport { LocationService } from 'app/location.service';\nimport { WeatherHttpService } from 'app/weather-http.service';\nimport { WeatherLocation } from 'app/weather-location.model';\nimport { NEVER, Observable } from 'rxjs';\nimport { WeatherService } from \"../weather.service\";\n\n@Component({\n  selector: 'app-current-conditions',\n  templateUrl: './current-conditions.component.html',\n  styleUrls: ['./current-conditions.component.css']\n})\nexport class CurrentConditionsComponent implements OnInit {\n\n  currentConditions$: Observable<CurrentCondition[]> = NEVER;\n\n  constructor(\n    private weatherService: WeatherService,\n    private weatherHttpService: WeatherHttpService,\n    private locationService: LocationService,\n    private router: Router\n  ) { }\n\n  ngOnInit(): void {\n    this.currentConditions$ = this.weatherService.currentConditions$;\n  }\n\n  removeLocation(zipcode: string) {\n    this.locationService.removeLocation(zipcode);\n  }\n}\n","import { Component } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { WeatherHttpService } from 'app/weather-http.service';\nimport { WeatherLocation } from 'app/weather-location.model';\n\n@Component({\n  selector: 'app-forecasts-list',\n  templateUrl: './forecasts-list.component.html',\n  styleUrls: ['./forecasts-list.component.css']\n})\nexport class ForecastsListComponent {\n\n  forecast: any;\n\n  constructor(\n    private weatherHttpService: WeatherHttpService,\n    private route: ActivatedRoute\n  ) {\n    this.route.params.subscribe(params => {\n\n      const weatherLocation: WeatherLocation = {\n        countrycode: params['countrycode'],\n        zipcode: params['zipcode']\n      };\n\n      this.weatherHttpService.getForecast(weatherLocation)\n        .subscribe(data => this.forecast = data);\n    });\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'highlight',\n})\nexport class HighlightPipe implements PipeTransform {\n\n  transform(value: string, args: string): string {\n    if (!args) {\n      return value;\n    }\n\n    const regex = new RegExp(args, 'gi');\n    const match = value.match(regex);\n\n    if (!match) {\n      return value;\n    }\n\n    return value.replace(regex, `<mark><b>${match[0]}</b></mark>`);\n  }\n\n}","import { Component, ElementRef, forwardRef, HostListener, Input, OnDestroy, OnInit } from '@angular/core';\nimport { ControlValueAccessor, FormControl, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { AutocompleteOption } from 'app/autocomplete-option.model';\nimport { Observable, Subscription } from 'rxjs';\nimport { debounceTime, map, startWith, switchMap } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-input-autocomplete',\n  templateUrl: './input-autocomplete.component.html',\n  styleUrls: ['./input-autocomplete.component.css'],\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      multi: true,\n      useExisting: forwardRef(() => InputAutocompleteComponent)\n    }\n  ]\n})\nexport class InputAutocompleteComponent implements OnInit, OnDestroy, ControlValueAccessor {\n\n  @Input()\n  inputName: string = '';\n\n  @Input()\n  label: string = '';\n\n  @Input()\n  options$: Observable<AutocompleteOption[]>;\n\n  @HostListener('document:click', ['$event'])\n  clickout(event) {\n    this.inputHasFocus = this.elementRef.nativeElement.contains(event.target) ? true : false;\n  }\n\n  formControl: FormControl = new FormControl('');\n  filteredOptions$: Observable<AutocompleteOption[]>;\n  inputHasFocus: boolean;\n\n  private subscriptions: Subscription = new Subscription();\n\n  constructor(\n    private elementRef: ElementRef\n  ) { }\n\n  ngOnInit(): void {\n    this.subscriptions.add(\n      this.formControl.valueChanges.subscribe(() => {\n        this._onChange(this.formControl.value);\n      })\n    );\n\n    this.filteredOptions$ = this.formControl.valueChanges\n      .pipe(\n        startWith(''),\n        debounceTime(400),\n        // distinctUntilChanged(),\n        switchMap(val => {\n          return this.filter(this.formControl.value || '')\n        })\n      )\n\n  }\n\n  ngOnDestroy(): void {\n    this.subscriptions.unsubscribe();\n  }\n\n  filter(val: string): Observable<AutocompleteOption[]> {\n    return this.options$\n      .pipe(\n        map(response => response\n          .filter(option => {\n            return option.label.toLowerCase().includes(val.toLowerCase());\n          })\n        )\n      );\n  }\n\n  writeValue(value: string) {\n    this.formControl.setValue(value);\n  }\n\n  private _onChange = (_value: string): void => undefined;\n  public registerOnChange(fn: (value: string) => void): void {\n    this._onChange = fn;\n  }\n\n  public onTouched = (): void => undefined;\n  public registerOnTouched(fn: () => void): void {\n    this.onTouched = fn;\n  }\n\n  public setDisabledState(isDisabled: boolean): void {\n    if (isDisabled) {\n      this.formControl.disable();\n    } else {\n      this.formControl.enable();\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable, of, throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport { WeatherLocation } from './weather-location.model';\nimport { WeatherService } from \"./weather.service\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LocationService {\n  private readonly LOCATIONS_STORAGE_KEY = 'locations';\n\n  private locationsSubject: BehaviorSubject<WeatherLocation[]> = new BehaviorSubject([]);\n  locations$: Observable<WeatherLocation[]> = this.locationsSubject.asObservable();\n\n  constructor(\n    private weatherService: WeatherService\n  ) {\n    this.setLocations(this.getLocations());\n    for (let loc of this.locationsSubject.value) {\n      this.weatherService.addCurrentConditions(loc);\n    }\n  }\n\n  /**\n   * Sets the locations in local storage\n   */\n  setLocations(locations: WeatherLocation[]): void {\n    localStorage.setItem(this.LOCATIONS_STORAGE_KEY, JSON.stringify(locations));\n    this.locationsSubject.next([...locations]);\n  }\n\n  /**\n   * Gets the locations from local storage as an array of string\n   */\n  getLocations(): WeatherLocation[] {\n    const jsonValue = localStorage.getItem(this.LOCATIONS_STORAGE_KEY);\n    if (!!jsonValue) {\n      return JSON.parse(jsonValue) as WeatherLocation[];\n    }\n    return [];\n  }\n\n  /**\n   * Removes one location value from the list stored in local storage\n   */\n  removeLocation(zipcode: string): void {\n    this.setLocations(this.getLocations().filter((value) => value.zipcode !== zipcode));\n    this.weatherService.removeCurrentConditions(zipcode);\n  }\n\n  /**\n   * Adds one location value to the list stored in local storage\n   */\n  addLocation(location: WeatherLocation): void {\n    if (!this.isLocationAlreadyAdded(location.zipcode)) {\n      const newWeatherLocationsValue: WeatherLocation[] = [...this.getLocations(), location];\n      this.setLocations(newWeatherLocationsValue);\n      this.weatherService.addCurrentConditions(location);\n    }\n  }\n\n  /**\n   * Adds one location value to the list stored in local storage and returns observable\n   */\n  addLocationObs(location: WeatherLocation): Observable<void> {\n    if (!this.isLocationAlreadyAdded(location.zipcode)) {\n      const newWeatherLocationsValue: WeatherLocation[] = [...this.getLocations(), location];\n      this.setLocations(newWeatherLocationsValue);\n      return this.weatherService.addCurrentConditionsObs(location).pipe(\n        catchError(err => {\n          this.removeLocation(location.zipcode);\n          return throwError(err);\n        })\n      );\n    }\n    return of(void 0);\n  }\n\n  /**\n   * Returns true if location in parameter is already stored in local storage\n   */\n  isLocationAlreadyAdded(zipcode: string): boolean {\n    return this.getLocations().map(location => location.zipcode).includes(zipcode);\n  }\n\n}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-main-page',\n  templateUrl: './main-page.component.html'\n})\nexport class MainPageComponent {\n\n}\n","import { Component, HostListener, Input, TemplateRef } from '@angular/core';\nimport { merge, NEVER, Observable, of, Subject, timer } from 'rxjs';\nimport { catchError, map, switchMap } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-state-button',\n  templateUrl: './state-button.component.html'\n})\nexport class StateButtonComponent {\n\n  clickSubject: Subject<void> = new Subject();\n\n  @Input()\n  initialTemplate: TemplateRef<any>;\n  @Input()\n  workingTemplate: TemplateRef<any>;\n  @Input()\n  doneTemplate: TemplateRef<any>;\n\n  @Input()\n  clickAction: () => Observable<any>;\n\n  @HostListener('click', ['$event.target'])\n  onClick() {\n    this.clickSubject.next();\n  }\n\n  currentTemplate$: Observable<TemplateRef<any>> = NEVER;\n\n  ngOnInit() {\n    this.currentTemplate$ = merge(\n      // Initial button template\n      of(this.initialTemplate),\n      // Triggered when button is clicked\n      this.clickSubject.asObservable().pipe(\n        switchMap(() => merge(\n          // display \"workingTemplate\" when button is clicked\n          of(this.workingTemplate),\n          this.clickAction().pipe(\n            switchMap(() => merge(\n              // display \"doneTemplate\" when clickAction observable returns value\n              of(this.doneTemplate),\n              // display \"initialTemplate\" 500ms after clickAction observable returns value\n              timer(500).pipe(\n                map(() => this.initialTemplate)\n              )\n            )),\n            // display \"initialTemplate\" if error happened during clickAction observable\n            catchError(err => of(this.initialTemplate))\n          ),\n        )),\n      ),\n    );\n  }\n\n}","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { HttpClient } from '@angular/common/http';\nimport { map } from 'rxjs/operators';\nimport { WeatherLocation } from './weather-location.model';\nimport { CurrentCondition } from './current-condition.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class WeatherHttpService {\n\n  static URL = 'http://api.openweathermap.org/data/2.5';\n  static APPID = '5a4b2d457ecbef9eb2a71e480b947604';\n  static ICON_URL = 'https://raw.githubusercontent.com/udacity/Sunshine-Version-2/sunshine_master/app/src/main/res/drawable-hdpi/';\n\n  constructor(\n    private http: HttpClient\n  ) { }\n\n  /**\n   * Request to the weather API for the zipcode\n   */\n  getWeather(location: WeatherLocation): Observable<CurrentCondition> {\n    return this.http.get<CurrentCondition>(`${WeatherHttpService.URL}/weather?zip=${location.zipcode},${location.countrycode.toLocaleLowerCase()}&units=imperial&APPID=${WeatherHttpService.APPID}`).pipe(\n      map(data => {\n        const mapped: CurrentCondition = { location, data: data, date: new Date() };\n        return mapped;\n      })\n    )\n  }\n\n  /**\n   * Request to the forecast API for the zipcode\n   */\n  getForecast(location: WeatherLocation): Observable<any> {\n    return this.http.get(`${WeatherHttpService.URL}/forecast/daily?zip=${location.zipcode},${location.countrycode.toLocaleLowerCase()}&units=imperial&cnt=5&APPID=${WeatherHttpService.APPID}`);\n  }\n\n  getWeatherIcon(id) {\n    if (id >= 200 && id <= 232)\n      return WeatherHttpService.ICON_URL + \"art_storm.png\";\n    else if (id >= 501 && id <= 511)\n      return WeatherHttpService.ICON_URL + \"art_rain.png\";\n    else if (id === 500 || (id >= 520 && id <= 531))\n      return WeatherHttpService.ICON_URL + \"art_light_rain.png\";\n    else if (id >= 600 && id <= 622)\n      return WeatherHttpService.ICON_URL + \"art_snow.png\";\n    else if (id >= 801 && id <= 804)\n      return WeatherHttpService.ICON_URL + \"art_clouds.png\";\n    else if (id === 741 || id === 761)\n      return WeatherHttpService.ICON_URL + \"art_fog.png\";\n    else\n      return WeatherHttpService.ICON_URL + \"art_clear.png\";\n  }\n\n}\n","import { Injectable, OnDestroy } from '@angular/core';\nimport { BehaviorSubject, combineLatest, interval, Observable, of, Subscription } from 'rxjs';\nimport { delay, mapTo, switchMap, tap } from 'rxjs/operators';\nimport { CurrentCondition } from './current-condition.model';\n\nimport { WeatherHttpService } from './weather-http.service';\nimport { WeatherLocation } from './weather-location.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class WeatherService implements OnDestroy {\n\n  private currentConditionsSubject: BehaviorSubject<CurrentCondition[]> = new BehaviorSubject([]);\n  currentConditions$: Observable<CurrentCondition[]> = this.currentConditionsSubject.asObservable();\n\n  private subscriptions: Subscription = new Subscription();\n\n  constructor(\n    private weatherHttpService: WeatherHttpService\n  ) {\n    // Update weather value every 30 seconds\n    this.subscriptions.add(\n      interval(30000).subscribe(\n        () => this.updateCurrentConditionsFromApi()\n      )\n    );\n  }\n\n  ngOnDestroy(): void {\n    this.subscriptions.unsubscribe();\n  }\n\n  /**\n   * Sets the currentConditions\n   */\n  setCurrentConditions(currentConditions: CurrentCondition[]): void {\n    this.currentConditionsSubject.next([...currentConditions]);\n  }\n\n  /**\n   * Gets the currentConditions\n   */\n  getCurrentConditions(): CurrentCondition[] {\n    return this.currentConditionsSubject.value;\n  }\n\n  /**\n   * Adds the current conditions for the zipcode\n   */\n  addCurrentConditions(location: WeatherLocation): void {\n    this.weatherHttpService.getWeather(location).subscribe(\n      data => this.currentConditionsSubject.next([...this.getCurrentConditions(), data])\n    );\n  }\n\n  /**\n   * Adds the current conditions for the zipcode and returns observable when done\n   */\n  addCurrentConditionsObs(location: WeatherLocation): Observable<void> {\n    return this.weatherHttpService.getWeather(location).pipe(\n      delay(1000), // simulate long response to view the state change on the \"state-button\" component\n      tap(data => this.currentConditionsSubject.next([...this.getCurrentConditions(), data])),\n      switchMap(() => of(void 0))\n    );\n  }\n\n  /**\n   * Removes the current conditions for the zipcode\n   */\n  removeCurrentConditions(zipcode: string): void {\n    this.setCurrentConditions(this.getCurrentConditions().filter((value) => value.location.zipcode !== zipcode));\n  }\n\n  /**\n   * Updates current conditions from API for all stored locations\n   */\n  updateCurrentConditionsFromApi(): void {\n    combineLatest(\n      this.getCurrentConditions()\n        .map(currentCondtion => this.weatherHttpService.getWeather(currentCondtion.location))\n    ).subscribe(\n      updatedCurrentConditions => this.setCurrentConditions(updatedCurrentConditions)\n    );\n  }\n\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Component, ElementRef, ViewChild } from '@angular/core';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { AutocompleteOption } from 'app/autocomplete-option.model';\nimport { WeatherLocation } from 'app/weather-location.model';\nimport { Observable } from 'rxjs';\nimport { finalize, map } from 'rxjs/operators';\nimport { LocationService } from \"../location.service\";\n\n@Component({\n  selector: 'app-zipcode-entry',\n  templateUrl: './zipcode-entry.component.html'\n})\nexport class ZipcodeEntryComponent {\n  @ViewChild('zipcode') zipcode: ElementRef;\n\n  form = this.fb.group({\n    countrycode: ['', [Validators.required]],\n    zipcode: ['', [Validators.required]]\n  });\n\n  countriesOptions$: Observable<AutocompleteOption[]> = this.http.get<{ name: string, code: string }[]>('/assets/countries.json')\n    .pipe(\n      map(data => data.map(country => {\n        const autocompleteOption: AutocompleteOption = {\n          label: `${country.name} (${country.code})`,\n          value: country.code\n        }\n        return autocompleteOption;\n      }))\n    );\n\n  constructor(\n    private locationService: LocationService,\n    private http: HttpClient,\n    private fb: FormBuilder\n  ) { }\n\n  addLocation(): Observable<void> {\n    const weatherLocation: WeatherLocation = {\n      countrycode: this.form.value.countrycode,\n      zipcode: this.form.value.zipcode\n    };\n\n    return this.locationService.addLocationObs(weatherLocation)\n      .pipe(\n        finalize(() => {\n          this.form.reset();\n        })\n      );\n\n  }\n\n}\n","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n"],"names":[],"sourceRoot":"webpack:///","x_google_ignoreList":[]}